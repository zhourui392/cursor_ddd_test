@startuml RBAC详细流程图

actor 用户 as User
participant "前端应用" as Frontend
participant "控制器" as Controller
participant "JWT过滤器" as JwtFilter
participant "认证管理器" as AuthManager
participant "用户服务" as UserService
participant "角色服务" as RoleService
participant "权限服务" as PermissionService
participant "数据库" as Database

== 用户注册流程 ==

User -> Frontend: 输入注册信息
Frontend -> Controller: 发送注册请求
Controller -> UserService: 处理注册请求
UserService -> UserService: 验证用户信息
UserService -> Database: 检查用户名是否存在
Database --> UserService: 返回检查结果
alt 用户名已存在
    UserService --> Controller: 返回用户名已存在错误
    Controller --> Frontend: 返回注册失败信息
    Frontend --> User: 显示注册失败
else 用户名可用
    UserService -> UserService: 加密密码
    UserService -> Database: 保存用户信息
    Database --> UserService: 返回保存结果
    UserService -> RoleService: 分配默认角色
    RoleService -> Database: 保存用户角色关系
    Database --> RoleService: 返回保存结果
    RoleService --> UserService: 返回角色分配结果
    UserService --> Controller: 返回注册成功信息
    Controller --> Frontend: 返回注册成功信息
    Frontend --> User: 显示注册成功
end

== 用户登录流程 ==

User -> Frontend: 输入用户名和密码
Frontend -> Controller: 发送登录请求
Controller -> AuthManager: 处理登录认证
AuthManager -> UserService: 加载用户信息
UserService -> Database: 根据用户名查询用户
Database --> UserService: 返回用户信息
UserService -> UserService: 验证用户状态
alt 用户不存在或已禁用
    UserService --> AuthManager: 抛出认证异常
    AuthManager --> Controller: 返回认证失败信息
    Controller --> Frontend: 返回登录失败信息
    Frontend --> User: 显示登录失败
else 用户正常
    UserService -> RoleService: 加载用户角色
    RoleService -> Database: 查询用户角色
    Database --> RoleService: 返回用户角色
    RoleService -> PermissionService: 加载角色权限
    PermissionService -> Database: 查询角色权限
    Database --> PermissionService: 返回角色权限
    PermissionService --> RoleService: 返回权限信息
    RoleService --> UserService: 返回角色和权限信息
    UserService --> AuthManager: 返回用户详情(含权限)
    AuthManager -> AuthManager: 验证密码
    alt 密码错误
        AuthManager --> Controller: 返回认证失败信息
        Controller --> Frontend: 返回登录失败信息
        Frontend --> User: 显示登录失败
    else 密码正确
        AuthManager -> JwtFilter: 生成JWT令牌
        JwtFilter --> AuthManager: 返回JWT令牌
        AuthManager --> Controller: 返回认证成功信息
        Controller -> UserService: 更新最后登录时间
        UserService -> Database: 保存最后登录时间
        Database --> UserService: 返回保存结果
        UserService --> Controller: 返回用户信息
        Controller --> Frontend: 返回JWT令牌和用户信息
        Frontend -> Frontend: 保存令牌和用户信息
        Frontend --> User: 显示登录成功
    end
end

== 访问受保护资源流程 ==

User -> Frontend: 请求访问资源
Frontend -> Frontend: 添加JWT令牌到请求头
Frontend -> JwtFilter: 发送资源请求
JwtFilter -> JwtFilter: 验证JWT令牌
alt 令牌无效或已过期
    JwtFilter --> Frontend: 返回401(未授权)
    Frontend --> User: 显示登录过期提示
else 令牌有效
    JwtFilter -> UserService: 加载用户信息
    UserService -> Database: 查询用户信息
    Database --> UserService: 返回用户信息
    UserService -> RoleService: 加载用户角色
    RoleService -> Database: 查询用户角色
    Database --> RoleService: 返回用户角色
    RoleService -> PermissionService: 加载角色权限
    PermissionService -> Database: 查询角色权限
    Database --> PermissionService: 返回角色权限
    PermissionService --> RoleService: 返回权限信息
    RoleService --> UserService: 返回角色和权限信息
    UserService --> JwtFilter: 返回用户详情(含权限)
    JwtFilter -> JwtFilter: 设置安全上下文
    JwtFilter -> Controller: 转发请求
    Controller -> Controller: 验证方法级权限
    alt 无权访问
        Controller --> Frontend: 返回403(拒绝访问)
        Frontend --> User: 显示无权限提示
    else 有权访问
        Controller -> Database: 查询资源数据
        Database --> Controller: 返回资源数据
        Controller --> Frontend: 返回资源数据
        Frontend --> User: 显示资源
    end
end

@enduml 